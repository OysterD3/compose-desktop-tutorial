name: Release

on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '15'
          java-package: jdk

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Checkout Gradle Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/wrapper/dists/**/gradle*.zip
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build Debug
        run: ./gradlew build -x test

      - name: Build Release App
        run: |
          ./gradlew packageUberJarForCurrentOS
          ./gradlew package

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: distributable-${{ matrix.os }}
          if-no-files-found: ignore
          path: |
            build/**/*.dmg
            build/**/*.msi
            build/compose/jars/*.jar

      - name: Release
        uses: softprops/action-gh-release@91409e712cf565ce9eff10c87a8d1b11b81757ae
        with:
          prerelease: ${{ contains(github.event.inputs.version, '-rc') || contains(github.event.inputs.version, '-b') || contains(github.event.inputs.version, '-a') }}
          files: |
            build/**/*.dmg
            build/**/*.msi
            build/compose/jars/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
